<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>pln_inco.temantex.VinculacionFreelingEventos</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="pln_inco-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="pln_inco-module.html">Package&nbsp;pln_inco</a> ::
        <a href="pln_inco.temantex-module.html">Package&nbsp;temantex</a> ::
        Module&nbsp;VinculacionFreelingEventos
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="pln_inco.temantex.VinculacionFreelingEventos-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="pln_inco.temantex.VinculacionFreelingEventos-module.html">Module pln_inco.temantex.VinculacionFreelingEventos</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno">  1</tt>  <tt class="py-line"><tt class="py-comment"># -*- coding: UTF-8 -*-</tt> </tt>
<a name="L2"></a><tt class="py-lineno">  2</tt>  <tt class="py-line"> </tt>
<a name="L3"></a><tt class="py-lineno">  3</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-0" class="py-name" targets="Package pln_inco=pln_inco-module.html"><a title="pln_inco" class="py-name" href="#" onclick="return doclink('link-0', 'pln_inco', 'link-0');">pln_inco</a></tt><tt class="py-op">.</tt><tt class="py-name">Freeling</tt> <tt class="py-keyword">import</tt> <tt class="py-op">*</tt> </tt>
<a name="L4"></a><tt class="py-lineno">  4</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-1" class="py-name"><a title="pln_inco" class="py-name" href="#" onclick="return doclink('link-1', 'pln_inco', 'link-0');">pln_inco</a></tt><tt class="py-op">.</tt><tt id="link-2" class="py-name" targets="Package pln_inco.temantex=pln_inco.temantex-module.html"><a title="pln_inco.temantex" class="py-name" href="#" onclick="return doclink('link-2', 'temantex', 'link-2');">temantex</a></tt><tt class="py-op">.</tt><tt id="link-3" class="py-name" targets="Module pln_inco.temantex.AnotAtrib=pln_inco.temantex.AnotAtrib-module.html"><a title="pln_inco.temantex.AnotAtrib" class="py-name" href="#" onclick="return doclink('link-3', 'AnotAtrib', 'link-3');">AnotAtrib</a></tt> <tt class="py-keyword">import</tt> <tt class="py-op">*</tt> </tt>
<a name="L5"></a><tt class="py-lineno">  5</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-4" class="py-name"><a title="pln_inco" class="py-name" href="#" onclick="return doclink('link-4', 'pln_inco', 'link-0');">pln_inco</a></tt><tt class="py-op">.</tt><tt id="link-5" class="py-name" targets="Module pln_inco.bioscope.util=pln_inco.bioscope.util-module.html,Package pln_inco.util=pln_inco.util-module.html"><a title="pln_inco.bioscope.util
pln_inco.util" class="py-name" href="#" onclick="return doclink('link-5', 'util', 'link-5');">util</a></tt><tt class="py-op">.</tt><tt id="link-6" class="py-name" targets="Module pln_inco.util.Tokenizador=pln_inco.util.Tokenizador-module.html"><a title="pln_inco.util.Tokenizador" class="py-name" href="#" onclick="return doclink('link-6', 'Tokenizador', 'link-6');">Tokenizador</a></tt> <tt class="py-keyword">import</tt> <tt class="py-op">*</tt> </tt>
<a name="L6"></a><tt class="py-lineno">  6</tt>  <tt class="py-line"> </tt>
<a name="L7"></a><tt class="py-lineno">  7</tt>  <tt class="py-line"> </tt>
<a name="cargarAnotacionesEventos"></a><div id="cargarAnotacionesEventos-def"><a name="L8"></a><tt class="py-lineno">  8</tt> <a class="py-toggle" href="#" id="cargarAnotacionesEventos-toggle" onclick="return toggle('cargarAnotacionesEventos');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="pln_inco.temantex.VinculacionFreelingEventos-module.html#cargarAnotacionesEventos">cargarAnotacionesEventos</a><tt class="py-op">(</tt><tt class="py-param">text_file</tt><tt class="py-op">,</tt> <tt class="py-param">encoding_text_file</tt><tt class="py-op">,</tt> <tt class="py-param">annotations_file</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="cargarAnotacionesEventos-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="cargarAnotacionesEventos-expanded"><a name="L9"></a><tt class="py-lineno">  9</tt>  <tt class="py-line">        <tt class="py-docstring">"""Retorna una lista de pares (TokenTexto, [anotaci&#243;n]) donde la segunda componente es vac&#237;a</tt> </tt>
<a name="L10"></a><tt class="py-lineno"> 10</tt>  <tt class="py-line"><tt class="py-docstring">        si el token no tiene anotaciones. De lo contrario, la misma es la lista de anotaciones asociadas al token.</tt> </tt>
<a name="L11"></a><tt class="py-lineno"> 11</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L12"></a><tt class="py-lineno"> 12</tt>  <tt class="py-line"><tt class="py-docstring">        Salvo pocas excepciones, como las palabras anotadas como INTRUSO (que est&#225;n dentro de un evento),</tt> </tt>
<a name="L13"></a><tt class="py-lineno"> 13</tt>  <tt class="py-line"><tt class="py-docstring">        la lista de anotaciones tendr&#225; solo un elemento."""</tt> </tt>
<a name="L14"></a><tt class="py-lineno"> 14</tt>  <tt class="py-line"> </tt>
<a name="L15"></a><tt class="py-lineno"> 15</tt>  <tt class="py-line">        <tt class="py-comment"># Abrimos el archivo en "modo universal" para no tener problemas con los fines de l&#237;nea Unix/Windows</tt> </tt>
<a name="L16"></a><tt class="py-lineno"> 16</tt>  <tt class="py-line">        <tt class="py-name">f</tt> <tt class="py-op">=</tt> <tt class="py-name">open</tt><tt class="py-op">(</tt><tt class="py-name">text_file</tt><tt class="py-op">,</tt> <tt class="py-string">'rU'</tt><tt class="py-op">)</tt> </tt>
<a name="L17"></a><tt class="py-lineno"> 17</tt>  <tt class="py-line">        <tt class="py-name">texto</tt> <tt class="py-op">=</tt> <tt class="py-name">f</tt><tt class="py-op">.</tt><tt class="py-name">read</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">decode</tt><tt class="py-op">(</tt><tt class="py-name">encoding_text_file</tt><tt class="py-op">)</tt> <tt class="py-comment"># Codificaci&#243;n del archivo del corpus</tt> </tt>
<a name="L18"></a><tt class="py-lineno"> 18</tt>  <tt class="py-line">        <tt class="py-name">f</tt><tt class="py-op">.</tt><tt class="py-name">close</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L19"></a><tt class="py-lineno"> 19</tt>  <tt class="py-line">         </tt>
<a name="L20"></a><tt class="py-lineno"> 20</tt>  <tt class="py-line">        <tt class="py-name">annots_por_pos</tt> <tt class="py-op">=</tt> <tt id="link-7" class="py-name" targets="Function pln_inco.temantex.AnotAtrib.obtenerAnotaciones()=pln_inco.temantex.AnotAtrib-module.html#obtenerAnotaciones"><a title="pln_inco.temantex.AnotAtrib.obtenerAnotaciones" class="py-name" href="#" onclick="return doclink('link-7', 'obtenerAnotaciones', 'link-7');">obtenerAnotaciones</a></tt><tt class="py-op">(</tt><tt class="py-name">annotations_file</tt><tt class="py-op">)</tt> </tt>
<a name="L21"></a><tt class="py-lineno"> 21</tt>  <tt class="py-line">        <tt class="py-name">poss</tt> <tt class="py-op">=</tt> <tt class="py-name">sorted</tt><tt class="py-op">(</tt><tt class="py-name">annots_por_pos</tt><tt class="py-op">.</tt><tt class="py-name">keys</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L22"></a><tt class="py-lineno"> 22</tt>  <tt class="py-line">         </tt>
<a name="L23"></a><tt class="py-lineno"> 23</tt>  <tt class="py-line">        <tt class="py-comment"># Cargamos los tokens, inicialmente sin asignarle anotaci&#243;n a ninguno de ellos.</tt> </tt>
<a name="L24"></a><tt class="py-lineno"> 24</tt>  <tt class="py-line">        <tt class="py-name">tokens_anotaciones</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">(</tt><tt class="py-name">token</tt><tt class="py-op">,</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-keyword">for</tt> <tt class="py-name">token</tt> <tt class="py-keyword">in</tt> <tt id="link-8" class="py-name" targets="Function pln_inco.util.Tokenizador.obtenerTokens()=pln_inco.util.Tokenizador-module.html#obtenerTokens"><a title="pln_inco.util.Tokenizador.obtenerTokens" class="py-name" href="#" onclick="return doclink('link-8', 'obtenerTokens', 'link-8');">obtenerTokens</a></tt><tt class="py-op">(</tt><tt class="py-name">texto</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L25"></a><tt class="py-lineno"> 25</tt>  <tt class="py-line">        <tt class="py-name">ultimo_indice_token</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L26"></a><tt class="py-lineno"> 26</tt>  <tt class="py-line"> </tt>
<a name="L27"></a><tt class="py-lineno"> 27</tt>  <tt class="py-line">        <tt class="py-comment">#</tt> </tt>
<a name="L28"></a><tt class="py-lineno"> 28</tt>  <tt class="py-line">        <tt class="py-comment"># Recorremos todas las anotaciones ordenadas por la posici&#243;n de comienzo</tt> </tt>
<a name="L29"></a><tt class="py-lineno"> 29</tt>  <tt class="py-line">        <tt class="py-comment">#</tt> </tt>
<a name="L30"></a><tt class="py-lineno"> 30</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">i</tt> <tt class="py-keyword">in</tt> <tt class="py-name">range</tt><tt class="py-op">(</tt><tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">annots_por_pos</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L31"></a><tt class="py-lineno"> 31</tt>  <tt class="py-line">                <tt class="py-name">pos</tt> <tt class="py-op">=</tt> <tt class="py-name">poss</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">]</tt> </tt>
<a name="L32"></a><tt class="py-lineno"> 32</tt>  <tt class="py-line">                <tt class="py-name">a</tt> <tt class="py-op">=</tt> <tt class="py-name">annots_por_pos</tt><tt class="py-op">[</tt><tt class="py-name">pos</tt><tt class="py-op">]</tt> </tt>
<a name="L33"></a><tt class="py-lineno"> 33</tt>  <tt class="py-line"> </tt>
<a name="L34"></a><tt class="py-lineno"> 34</tt>  <tt class="py-line">                <tt class="py-comment"># Si la anotaci&#243;n tiene marcados comienzo y fin</tt> </tt>
<a name="L35"></a><tt class="py-lineno"> 35</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">a</tt><tt class="py-op">.</tt><tt class="py-name">ini</tt> <tt class="py-op">!=</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> <tt class="py-keyword">and</tt> <tt class="py-name">a</tt><tt class="py-op">.</tt><tt class="py-name">fin</tt> <tt class="py-op">!=</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">:</tt>          </tt>
<a name="L36"></a><tt class="py-lineno"> 36</tt>  <tt class="py-line">                        <tt class="py-comment"># Buscamos el siguiente token cuyo inicio coincida con la anotaci&#243;n</tt> </tt>
<a name="L37"></a><tt class="py-lineno"> 37</tt>  <tt class="py-line">                        <tt class="py-name">encontre</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L38"></a><tt class="py-lineno"> 38</tt>  <tt class="py-line">                        <tt class="py-keyword">while</tt> <tt class="py-keyword">not</tt> <tt class="py-name">encontre</tt><tt class="py-op">:</tt> </tt>
<a name="L39"></a><tt class="py-lineno"> 39</tt>  <tt class="py-line">                                <tt class="py-name">token</tt> <tt class="py-op">=</tt> <tt class="py-name">tokens_anotaciones</tt><tt class="py-op">[</tt><tt class="py-name">ultimo_indice_token</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> </tt>
<a name="L40"></a><tt class="py-lineno"> 40</tt>  <tt class="py-line">                                <tt class="py-comment"># El &gt;= es por las dudas, por si la anotaci&#243;n estaba mal marcada y comienza en un</tt> </tt>
<a name="L41"></a><tt class="py-lineno"> 41</tt>  <tt class="py-line">                                <tt class="py-comment"># espacio o similar (antes de la palabra del evento)</tt> </tt>
<a name="L42"></a><tt class="py-lineno"> 42</tt>  <tt class="py-line">                                <tt class="py-keyword">if</tt> <tt class="py-name">token</tt><tt class="py-op">.</tt><tt class="py-name">ini</tt> <tt class="py-op">&gt;=</tt> <tt class="py-name">a</tt><tt class="py-op">.</tt><tt class="py-name">ini</tt><tt class="py-op">:</tt> </tt>
<a name="L43"></a><tt class="py-lineno"> 43</tt>  <tt class="py-line">                                        <tt class="py-name">encontre</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L44"></a><tt class="py-lineno"> 44</tt>  <tt class="py-line">                                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L45"></a><tt class="py-lineno"> 45</tt>  <tt class="py-line">                                        <tt class="py-name">ultimo_indice_token</tt> <tt class="py-op">+=</tt> <tt class="py-number">1</tt> </tt>
<a name="L46"></a><tt class="py-lineno"> 46</tt>  <tt class="py-line">                         </tt>
<a name="L47"></a><tt class="py-lineno"> 47</tt>  <tt class="py-line">                        <tt class="py-comment"># Asignamos la anotaci&#243;n a los tokens que corresponden</tt> </tt>
<a name="L48"></a><tt class="py-lineno"> 48</tt>  <tt class="py-line">                        <tt class="py-comment"># (aquellos cuyo fin es &lt;= al de la anotaci&#243;n)</tt> </tt>
<a name="L49"></a><tt class="py-lineno"> 49</tt>  <tt class="py-line">                        <tt class="py-name">indice_token_actual</tt> <tt class="py-op">=</tt> <tt class="py-name">ultimo_indice_token</tt> </tt>
<a name="L50"></a><tt class="py-lineno"> 50</tt>  <tt class="py-line">                        <tt class="py-keyword">while</tt> <tt class="py-name">tokens_anotaciones</tt><tt class="py-op">[</tt><tt class="py-name">indice_token_actual</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">fin</tt> <tt class="py-op">&lt;=</tt> <tt class="py-name">a</tt><tt class="py-op">.</tt><tt class="py-name">fin</tt><tt class="py-op">:</tt> </tt>
<a name="L51"></a><tt class="py-lineno"> 51</tt>  <tt class="py-line">                                <tt class="py-name">tokens_anotaciones</tt><tt class="py-op">[</tt><tt class="py-name">indice_token_actual</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-name">a</tt><tt class="py-op">)</tt> </tt>
<a name="L52"></a><tt class="py-lineno"> 52</tt>  <tt class="py-line">                                <tt class="py-name">indice_token_actual</tt> <tt class="py-op">+=</tt> <tt class="py-number">1</tt> </tt>
<a name="L53"></a><tt class="py-lineno"> 53</tt>  <tt class="py-line"> </tt>
<a name="L54"></a><tt class="py-lineno"> 54</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">tokens_anotaciones</tt> </tt>
</div><a name="L55"></a><tt class="py-lineno"> 55</tt>  <tt class="py-line"> </tt>
<a name="L56"></a><tt class="py-lineno"> 56</tt>  <tt class="py-line"> </tt>
<a name="quedarseConUnaAnotacion"></a><div id="quedarseConUnaAnotacion-def"><a name="L57"></a><tt class="py-lineno"> 57</tt> <a class="py-toggle" href="#" id="quedarseConUnaAnotacion-toggle" onclick="return toggle('quedarseConUnaAnotacion');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="pln_inco.temantex.VinculacionFreelingEventos-module.html#quedarseConUnaAnotacion">quedarseConUnaAnotacion</a><tt class="py-op">(</tt><tt class="py-param">lista_tokens_anotaciones</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="quedarseConUnaAnotacion-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="quedarseConUnaAnotacion-expanded"><a name="L58"></a><tt class="py-lineno"> 58</tt>  <tt class="py-line">        <tt class="py-docstring">"""Antes de combinar con la salida de Freeling, le damos una pasada a nuestra</tt> </tt>
<a name="L59"></a><tt class="py-lineno"> 59</tt>  <tt class="py-line"><tt class="py-docstring">        lista de tokens para que cada token quede con exactamente una anotaci&#243;n.</tt> </tt>
<a name="L60"></a><tt class="py-lineno"> 60</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L61"></a><tt class="py-lineno"> 61</tt>  <tt class="py-line"><tt class="py-docstring">        El &#250;nico caso para el que sirve esto es para los "intrusos", de forma que</tt> </tt>
<a name="L62"></a><tt class="py-lineno"> 62</tt>  <tt class="py-line"><tt class="py-docstring">        la etiqueta "intruso" le gane a "evento"."""</tt> </tt>
<a name="L63"></a><tt class="py-lineno"> 63</tt>  <tt class="py-line"> </tt>
<a name="L64"></a><tt class="py-lineno"> 64</tt>  <tt class="py-line">        <tt class="py-name">lista_tokens_anotacion</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L65"></a><tt class="py-lineno"> 65</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-op">(</tt><tt class="py-name">token</tt><tt class="py-op">,</tt> <tt class="py-name">anotaciones</tt><tt class="py-op">)</tt> <tt class="py-keyword">in</tt> <tt class="py-name">lista_tokens_anotaciones</tt><tt class="py-op">:</tt> </tt>
<a name="L66"></a><tt class="py-lineno"> 66</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">anotaciones</tt><tt class="py-op">)</tt> <tt class="py-op">&gt;=</tt> <tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L67"></a><tt class="py-lineno"> 67</tt>  <tt class="py-line">                        <tt class="py-name">anotacion_ganadora</tt> <tt class="py-op">=</tt> <tt class="py-name">anotaciones</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> <tt class="py-comment"># Por defecto queda la primera</tt> </tt>
<a name="L68"></a><tt class="py-lineno"> 68</tt>  <tt class="py-line">                        <tt class="py-keyword">for</tt> <tt class="py-name">a</tt> <tt class="py-keyword">in</tt> <tt class="py-name">anotaciones</tt><tt class="py-op">:</tt> </tt>
<a name="L69"></a><tt class="py-lineno"> 69</tt>  <tt class="py-line">                                <tt class="py-keyword">if</tt> <tt class="py-name">a</tt><tt class="py-op">.</tt><tt class="py-name">tipo</tt><tt class="py-op">.</tt><tt class="py-name">upper</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-string">'INTRUSO'</tt><tt class="py-op">:</tt> </tt>
<a name="L70"></a><tt class="py-lineno"> 70</tt>  <tt class="py-line">                                        <tt class="py-name">anotacion_ganadora</tt> <tt class="py-op">=</tt> <tt class="py-name">a</tt> </tt>
<a name="L71"></a><tt class="py-lineno"> 71</tt>  <tt class="py-line">                        <tt class="py-name">lista_tokens_anotacion</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">token</tt><tt class="py-op">,</tt> <tt class="py-name">anotacion_ganadora</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L72"></a><tt class="py-lineno"> 72</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L73"></a><tt class="py-lineno"> 73</tt>  <tt class="py-line">                        <tt class="py-name">lista_tokens_anotacion</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">token</tt><tt class="py-op">,</tt> <tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L74"></a><tt class="py-lineno"> 74</tt>  <tt class="py-line"> </tt>
<a name="L75"></a><tt class="py-lineno"> 75</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">lista_tokens_anotacion</tt> </tt>
</div><a name="L76"></a><tt class="py-lineno"> 76</tt>  <tt class="py-line"> </tt>
<a name="L77"></a><tt class="py-lineno"> 77</tt>  <tt class="py-line"> </tt>
<a name="mergeFreelingConAnotaciones"></a><div id="mergeFreelingConAnotaciones-def"><a name="L78"></a><tt class="py-lineno"> 78</tt> <a class="py-toggle" href="#" id="mergeFreelingConAnotaciones-toggle" onclick="return toggle('mergeFreelingConAnotaciones');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="pln_inco.temantex.VinculacionFreelingEventos-module.html#mergeFreelingConAnotaciones">mergeFreelingConAnotaciones</a><tt class="py-op">(</tt><tt class="py-param">text_file</tt><tt class="py-op">,</tt> <tt class="py-param">encoding_text_file</tt><tt class="py-op">,</tt> <tt class="py-param">annotations_file</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="mergeFreelingConAnotaciones-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="mergeFreelingConAnotaciones-expanded"><a name="L79"></a><tt class="py-lineno"> 79</tt>  <tt class="py-line">        <tt class="py-docstring">"""Combina las anotaciones del xml de knowtator con la salida del etiquetado gramatical de Freeling</tt> </tt>
<a name="L80"></a><tt class="py-lineno"> 80</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L81"></a><tt class="py-lineno"> 81</tt>  <tt class="py-line"><tt class="py-docstring">        Devuelve una lista de oraciones, siendo cada elemento de &#233;sta una lista de tipo [(TokenTexto, diccionario)],</tt> </tt>
<a name="L82"></a><tt class="py-lineno"> 82</tt>  <tt class="py-line"><tt class="py-docstring">        donde los tokens corresponden a los de Freeling, y diccionario tiene la informaci&#243;n que brindaba Freeling,</tt> </tt>
<a name="L83"></a><tt class="py-lineno"> 83</tt>  <tt class="py-line"><tt class="py-docstring">        adem&#225;s de la anotaci&#243;n en la clave 'anotacion'."""</tt> </tt>
<a name="L84"></a><tt class="py-lineno"> 84</tt>  <tt class="py-line"> </tt>
<a name="L85"></a><tt class="py-lineno"> 85</tt>  <tt class="py-line">        <tt class="py-name">lista_token_mio_anotacion</tt> <tt class="py-op">=</tt> <tt id="link-9" class="py-name" targets="Function pln_inco.temantex.VinculacionFreelingEventos.quedarseConUnaAnotacion()=pln_inco.temantex.VinculacionFreelingEventos-module.html#quedarseConUnaAnotacion"><a title="pln_inco.temantex.VinculacionFreelingEventos.quedarseConUnaAnotacion" class="py-name" href="#" onclick="return doclink('link-9', 'quedarseConUnaAnotacion', 'link-9');">quedarseConUnaAnotacion</a></tt><tt class="py-op">(</tt><tt id="link-10" class="py-name" targets="Function pln_inco.temantex.VinculacionFreelingEventos.cargarAnotacionesEventos()=pln_inco.temantex.VinculacionFreelingEventos-module.html#cargarAnotacionesEventos"><a title="pln_inco.temantex.VinculacionFreelingEventos.cargarAnotacionesEventos" class="py-name" href="#" onclick="return doclink('link-10', 'cargarAnotacionesEventos', 'link-10');">cargarAnotacionesEventos</a></tt><tt class="py-op">(</tt><tt class="py-name">text_file</tt><tt class="py-op">,</tt> <tt class="py-name">encoding_text_file</tt><tt class="py-op">,</tt> <tt class="py-name">annotations_file</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L86"></a><tt class="py-lineno"> 86</tt>  <tt class="py-line">        <tt class="py-name">oraciones_freeling</tt> <tt class="py-op">=</tt> <tt id="link-11" class="py-name" targets="Function pln_inco.freeling.obtenerOracionesEtiquetadasFreeling()=pln_inco.freeling-module.html#obtenerOracionesEtiquetadasFreeling"><a title="pln_inco.freeling.obtenerOracionesEtiquetadasFreeling" class="py-name" href="#" onclick="return doclink('link-11', 'obtenerOracionesEtiquetadasFreeling', 'link-11');">obtenerOracionesEtiquetadasFreeling</a></tt><tt class="py-op">(</tt><tt class="py-name">text_file</tt><tt class="py-op">,</tt> <tt class="py-name">encoding_text_file</tt><tt class="py-op">)</tt> </tt>
<a name="L87"></a><tt class="py-lineno"> 87</tt>  <tt class="py-line">         </tt>
<a name="L88"></a><tt class="py-lineno"> 88</tt>  <tt class="py-line">        <tt class="py-name">ultimo_indice_token_mio</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L89"></a><tt class="py-lineno"> 89</tt>  <tt class="py-line"> </tt>
<a name="L90"></a><tt class="py-lineno"> 90</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">oracion</tt> <tt class="py-keyword">in</tt> <tt class="py-name">oraciones_freeling</tt><tt class="py-op">:</tt> </tt>
<a name="L91"></a><tt class="py-lineno"> 91</tt>  <tt class="py-line">                <tt class="py-keyword">for</tt> <tt class="py-op">(</tt><tt class="py-name">tok_freeling</tt><tt class="py-op">,</tt> <tt class="py-name">dic_info_freeling</tt><tt class="py-op">)</tt> <tt class="py-keyword">in</tt> <tt class="py-name">oracion</tt><tt class="py-op">:</tt> </tt>
<a name="L92"></a><tt class="py-lineno"> 92</tt>  <tt class="py-line">                        <tt class="py-comment">#print 'Freeling: %s' % tok_freeling.texto.encode('utf-8')</tt> </tt>
<a name="L93"></a><tt class="py-lineno"> 93</tt>  <tt class="py-line">                 </tt>
<a name="L94"></a><tt class="py-lineno"> 94</tt>  <tt class="py-line">                        <tt class="py-comment"># Recorro todos los tokens mios que est&#225;n "dentro" del token freeling y voy juntando</tt> </tt>
<a name="L95"></a><tt class="py-lineno"> 95</tt>  <tt class="py-line">                        <tt class="py-comment"># todas las anotaciones.</tt> </tt>
<a name="L96"></a><tt class="py-lineno"> 96</tt>  <tt class="py-line">                        <tt class="py-name">anotaciones</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt>                         </tt>
<a name="L97"></a><tt class="py-lineno"> 97</tt>  <tt class="py-line">                        <tt class="py-keyword">for</tt> <tt class="py-op">(</tt><tt class="py-name">token</tt><tt class="py-op">,</tt> <tt class="py-name">anotacion</tt><tt class="py-op">)</tt> <tt class="py-keyword">in</tt> <tt class="py-name">lista_token_mio_anotacion</tt><tt class="py-op">:</tt> </tt>
<a name="L98"></a><tt class="py-lineno"> 98</tt>  <tt class="py-line">                                <tt class="py-keyword">if</tt> <tt class="py-name">token</tt><tt class="py-op">.</tt><tt class="py-name">ini</tt> <tt class="py-op">&gt;=</tt> <tt class="py-name">tok_freeling</tt><tt class="py-op">.</tt><tt class="py-name">ini</tt> <tt class="py-keyword">and</tt> <tt class="py-name">token</tt><tt class="py-op">.</tt><tt class="py-name">fin</tt> <tt class="py-op">&lt;=</tt> <tt class="py-name">tok_freeling</tt><tt class="py-op">.</tt><tt class="py-name">fin</tt><tt class="py-op">:</tt> </tt>
<a name="L99"></a><tt class="py-lineno"> 99</tt>  <tt class="py-line">                                        <tt class="py-name">anotaciones</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-name">anotacion</tt><tt class="py-op">)</tt> </tt>
<a name="L100"></a><tt class="py-lineno">100</tt>  <tt class="py-line">                 </tt>
<a name="L101"></a><tt class="py-lineno">101</tt>  <tt class="py-line">                        <tt class="py-comment"># De todas las anotaciones, nos quedamos con una sola.</tt> </tt>
<a name="L102"></a><tt class="py-lineno">102</tt>  <tt class="py-line">                        <tt class="py-comment"># Arbitrariamente, la primera.</tt> </tt>
<a name="L103"></a><tt class="py-lineno">103</tt>  <tt class="py-line">                        <tt class="py-keyword">if</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">anotaciones</tt><tt class="py-op">)</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L104"></a><tt class="py-lineno">104</tt>  <tt class="py-line">                                <tt class="py-name">anotacion</tt> <tt class="py-op">=</tt> <tt class="py-name">anotaciones</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> </tt>
<a name="L105"></a><tt class="py-lineno">105</tt>  <tt class="py-line">                        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L106"></a><tt class="py-lineno">106</tt>  <tt class="py-line">                                <tt class="py-name">anotacion</tt> <tt class="py-op">=</tt> <tt class="py-name">None</tt> </tt>
<a name="L107"></a><tt class="py-lineno">107</tt>  <tt class="py-line">                 </tt>
<a name="L108"></a><tt class="py-lineno">108</tt>  <tt class="py-line">                        <tt class="py-name">dic_info_freeling</tt><tt class="py-op">[</tt><tt class="py-string">'anotacion'</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">anotacion</tt>               </tt>
<a name="L109"></a><tt class="py-lineno">109</tt>  <tt class="py-line"> </tt>
<a name="L110"></a><tt class="py-lineno">110</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">oraciones_freeling</tt> </tt>
</div><a name="L111"></a><tt class="py-lineno">111</tt>  <tt class="py-line"> </tt>
<a name="L112"></a><tt class="py-lineno">112</tt>  <tt class="py-line"> </tt>
<a name="getValorAtributo"></a><div id="getValorAtributo-def"><a name="L113"></a><tt class="py-lineno">113</tt> <a class="py-toggle" href="#" id="getValorAtributo-toggle" onclick="return toggle('getValorAtributo');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="pln_inco.temantex.VinculacionFreelingEventos-module.html#getValorAtributo">getValorAtributo</a><tt class="py-op">(</tt><tt class="py-param">anotacion</tt><tt class="py-op">,</tt> <tt class="py-param">nom_atributo</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="getValorAtributo-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="getValorAtributo-expanded"><a name="L114"></a><tt class="py-lineno">114</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">at</tt> <tt class="py-keyword">in</tt> <tt class="py-name">anotacion</tt><tt class="py-op">.</tt><tt class="py-name">atributos</tt><tt class="py-op">:</tt> </tt>
<a name="L115"></a><tt class="py-lineno">115</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">at</tt><tt class="py-op">.</tt><tt class="py-name">name</tt> <tt class="py-op">==</tt> <tt class="py-name">nom_atributo</tt><tt class="py-op">:</tt> </tt>
<a name="L116"></a><tt class="py-lineno">116</tt>  <tt class="py-line">                        <tt class="py-keyword">return</tt> <tt class="py-name">at</tt><tt class="py-op">.</tt><tt class="py-name">value</tt> </tt>
<a name="L117"></a><tt class="py-lineno">117</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-string">''</tt> </tt>
</div><a name="L118"></a><tt class="py-lineno">118</tt>  <tt class="py-line"> </tt>
<a name="L119"></a><tt class="py-lineno">119</tt>  <tt class="py-line"> </tt>
<a name="obtenerOracionesTokensEtiquetados"></a><div id="obtenerOracionesTokensEtiquetados-def"><a name="L120"></a><tt class="py-lineno">120</tt> <a class="py-toggle" href="#" id="obtenerOracionesTokensEtiquetados-toggle" onclick="return toggle('obtenerOracionesTokensEtiquetados');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="pln_inco.temantex.VinculacionFreelingEventos-module.html#obtenerOracionesTokensEtiquetados">obtenerOracionesTokensEtiquetados</a><tt class="py-op">(</tt><tt class="py-param">text_file</tt><tt class="py-op">,</tt> <tt class="py-param">encoding_text_file</tt><tt class="py-op">,</tt> <tt class="py-param">annotations_file</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="obtenerOracionesTokensEtiquetados-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="obtenerOracionesTokensEtiquetados-expanded"><a name="L121"></a><tt class="py-lineno">121</tt>  <tt class="py-line">        <tt class="py-docstring">"""Misma salida que mergeFreelingConAnotaciones(), con la salvedad de que se elimina</tt> </tt>
<a name="L122"></a><tt class="py-lineno">122</tt>  <tt class="py-line"><tt class="py-docstring">        la clave 'anotacion' y pasa a ser 'tag_evento'.</tt> </tt>
<a name="L123"></a><tt class="py-lineno">123</tt>  <tt class="py-line"><tt class="py-docstring">        </tt> </tt>
<a name="L124"></a><tt class="py-lineno">124</tt>  <tt class="py-line"><tt class="py-docstring">        Finalmente entonces se devuelve una lista de tuplas (tag, diccionario) donde diccionario</tt> </tt>
<a name="L125"></a><tt class="py-lineno">125</tt>  <tt class="py-line"><tt class="py-docstring">        tiene claves {token, lema_freeling,     tag_freeling, tag_evento}.</tt> </tt>
<a name="L126"></a><tt class="py-lineno">126</tt>  <tt class="py-line"><tt class="py-docstring">        El elemento diccionario['token'] es de tipo TokenTexto, corresponde a un token de Freeling</tt> </tt>
<a name="L127"></a><tt class="py-lineno">127</tt>  <tt class="py-line"><tt class="py-docstring">        y tiene las posiciones de inicio y fin marcadas.</tt> </tt>
<a name="L128"></a><tt class="py-lineno">128</tt>  <tt class="py-line"><tt class="py-docstring">        El primer componente de la tupla resultado, tag, es un string que puede tomar los</tt> </tt>
<a name="L129"></a><tt class="py-lineno">129</tt>  <tt class="py-line"><tt class="py-docstring">        siguientes valores:</tt> </tt>
<a name="L130"></a><tt class="py-lineno">130</tt>  <tt class="py-line"><tt class="py-docstring">                * B_EVENTO, I_EVENTO</tt> </tt>
<a name="L131"></a><tt class="py-lineno">131</tt>  <tt class="py-line"><tt class="py-docstring">                * B_INDICE, I_INDICE</tt> </tt>
<a name="L132"></a><tt class="py-lineno">132</tt>  <tt class="py-line"><tt class="py-docstring">                * INTRUSO</tt> </tt>
<a name="L133"></a><tt class="py-lineno">133</tt>  <tt class="py-line"><tt class="py-docstring">                * O"""</tt> </tt>
<a name="L134"></a><tt class="py-lineno">134</tt>  <tt class="py-line"> </tt>
<a name="L135"></a><tt class="py-lineno">135</tt>  <tt class="py-line">        <tt class="py-name">en_evento</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L136"></a><tt class="py-lineno">136</tt>  <tt class="py-line">        <tt class="py-name">en_indice</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L137"></a><tt class="py-lineno">137</tt>  <tt class="py-line">         </tt>
<a name="L138"></a><tt class="py-lineno">138</tt>  <tt class="py-line">        <tt class="py-name">anotacion_evento_anterior</tt> <tt class="py-op">=</tt> <tt class="py-name">None</tt> </tt>
<a name="L139"></a><tt class="py-lineno">139</tt>  <tt class="py-line">        <tt class="py-name">anotacion_indice_anterior</tt> <tt class="py-op">=</tt> <tt class="py-name">None</tt> </tt>
<a name="L140"></a><tt class="py-lineno">140</tt>  <tt class="py-line">         </tt>
<a name="L141"></a><tt class="py-lineno">141</tt>  <tt class="py-line">        <tt class="py-name">oraciones</tt> <tt class="py-op">=</tt> <tt id="link-12" class="py-name" targets="Function pln_inco.temantex.VinculacionFreelingEventos.mergeFreelingConAnotaciones()=pln_inco.temantex.VinculacionFreelingEventos-module.html#mergeFreelingConAnotaciones"><a title="pln_inco.temantex.VinculacionFreelingEventos.mergeFreelingConAnotaciones" class="py-name" href="#" onclick="return doclink('link-12', 'mergeFreelingConAnotaciones', 'link-12');">mergeFreelingConAnotaciones</a></tt><tt class="py-op">(</tt><tt class="py-name">text_file</tt><tt class="py-op">,</tt> <tt class="py-name">encoding_text_file</tt><tt class="py-op">,</tt> <tt class="py-name">annotations_file</tt><tt class="py-op">)</tt> </tt>
<a name="L142"></a><tt class="py-lineno">142</tt>  <tt class="py-line"> </tt>
<a name="L143"></a><tt class="py-lineno">143</tt>  <tt class="py-line">        <tt class="py-name">lista_res</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L144"></a><tt class="py-lineno">144</tt>  <tt class="py-line">         </tt>
<a name="L145"></a><tt class="py-lineno">145</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">oracion</tt> <tt class="py-keyword">in</tt> <tt class="py-name">oraciones</tt><tt class="py-op">:</tt> </tt>
<a name="L146"></a><tt class="py-lineno">146</tt>  <tt class="py-line">                <tt class="py-name">res_oracion</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L147"></a><tt class="py-lineno">147</tt>  <tt class="py-line">                <tt class="py-keyword">for</tt> <tt class="py-op">(</tt><tt class="py-name">token</tt><tt class="py-op">,</tt> <tt class="py-name">a</tt><tt class="py-op">)</tt> <tt class="py-keyword">in</tt> <tt class="py-name">oracion</tt><tt class="py-op">:</tt> </tt>
<a name="L148"></a><tt class="py-lineno">148</tt>  <tt class="py-line">                        <tt class="py-name">anotacion</tt> <tt class="py-op">=</tt> <tt class="py-name">a</tt><tt class="py-op">[</tt><tt class="py-string">'anotacion'</tt><tt class="py-op">]</tt> </tt>
<a name="L149"></a><tt class="py-lineno">149</tt>  <tt class="py-line">                        <tt class="py-keyword">del</tt> <tt class="py-name">a</tt><tt class="py-op">[</tt><tt class="py-string">'anotacion'</tt><tt class="py-op">]</tt> <tt class="py-comment"># Eliminamos la anotaci&#243;n, la cambiaremos por tag_evento que corresponda</tt> </tt>
<a name="L150"></a><tt class="py-lineno">150</tt>  <tt class="py-line"> </tt>
<a name="L151"></a><tt class="py-lineno">151</tt>  <tt class="py-line">                        <tt class="py-keyword">if</tt> <tt class="py-name">anotacion</tt> <tt class="py-op">==</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L152"></a><tt class="py-lineno">152</tt>  <tt class="py-line">                                <tt class="py-name">en_evento</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L153"></a><tt class="py-lineno">153</tt>  <tt class="py-line">                                <tt class="py-name">en_indice</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L154"></a><tt class="py-lineno">154</tt>  <tt class="py-line">                                <tt class="py-name">tag_evento</tt> <tt class="py-op">=</tt> <tt class="py-string">'O'</tt> </tt>
<a name="L155"></a><tt class="py-lineno">155</tt>  <tt class="py-line">                         </tt>
<a name="L156"></a><tt class="py-lineno">156</tt>  <tt class="py-line">                        <tt class="py-keyword">elif</tt> <tt class="py-name">anotacion</tt><tt class="py-op">.</tt><tt class="py-name">tipo</tt><tt class="py-op">.</tt><tt class="py-name">upper</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-string">'EVENTO'</tt><tt class="py-op">:</tt> </tt>
<a name="L157"></a><tt class="py-lineno">157</tt>  <tt class="py-line">                                <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">en_evento</tt><tt class="py-op">:</tt> </tt>
<a name="L158"></a><tt class="py-lineno">158</tt>  <tt class="py-line">                                        <tt class="py-name">tag_evento</tt> <tt class="py-op">=</tt> <tt class="py-string">'B_EVENTO'</tt> </tt>
<a name="L159"></a><tt class="py-lineno">159</tt>  <tt class="py-line">                                        <tt class="py-name">anotacion_evento_anterior</tt> <tt class="py-op">=</tt> <tt class="py-name">anotacion</tt> </tt>
<a name="L160"></a><tt class="py-lineno">160</tt>  <tt class="py-line">                                         </tt>
<a name="L161"></a><tt class="py-lineno">161</tt>  <tt class="py-line">                                        <tt class="py-name">en_evento</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L162"></a><tt class="py-lineno">162</tt>  <tt class="py-line">                                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L163"></a><tt class="py-lineno">163</tt>  <tt class="py-line">                                        <tt class="py-comment"># Chequeamos que sea de verdad parte del mismo evento. Lo ser&#225; solamente en el caso</tt> </tt>
<a name="L164"></a><tt class="py-lineno">164</tt>  <tt class="py-line">                                        <tt class="py-comment"># en que la anotaci&#243;n del elemento anterior sea la misma.</tt> </tt>
<a name="L165"></a><tt class="py-lineno">165</tt>  <tt class="py-line">                                        <tt class="py-keyword">if</tt> <tt class="py-name">anotacion_evento_anterior</tt> <tt class="py-op">==</tt> <tt class="py-name">anotacion</tt><tt class="py-op">:</tt> </tt>
<a name="L166"></a><tt class="py-lineno">166</tt>  <tt class="py-line">                                                <tt class="py-name">tag_evento</tt> <tt class="py-op">=</tt> <tt class="py-string">'I_EVENTO'</tt> </tt>
<a name="L167"></a><tt class="py-lineno">167</tt>  <tt class="py-line">                                        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L168"></a><tt class="py-lineno">168</tt>  <tt class="py-line">                                                <tt class="py-name">tag_evento</tt> <tt class="py-op">=</tt> <tt class="py-string">'B_EVENTO'</tt> </tt>
<a name="L169"></a><tt class="py-lineno">169</tt>  <tt class="py-line">                                                <tt class="py-name">anotacion_evento_anterior</tt> <tt class="py-op">=</tt> <tt class="py-name">anotacion</tt> </tt>
<a name="L170"></a><tt class="py-lineno">170</tt>  <tt class="py-line">                        <tt class="py-keyword">elif</tt> <tt class="py-name">anotacion</tt><tt class="py-op">.</tt><tt class="py-name">tipo</tt><tt class="py-op">.</tt><tt class="py-name">upper</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-string">'INDICE'</tt><tt class="py-op">:</tt> </tt>
<a name="L171"></a><tt class="py-lineno">171</tt>  <tt class="py-line">                                <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">en_indice</tt><tt class="py-op">:</tt> </tt>
<a name="L172"></a><tt class="py-lineno">172</tt>  <tt class="py-line">                                        <tt class="py-name">tag_evento</tt> <tt class="py-op">=</tt> <tt class="py-string">'B_INDICE_%s'</tt> <tt class="py-op">%</tt> <tt id="link-13" class="py-name" targets="Function pln_inco.temantex.VinculacionFreelingEventos.getValorAtributo()=pln_inco.temantex.VinculacionFreelingEventos-module.html#getValorAtributo"><a title="pln_inco.temantex.VinculacionFreelingEventos.getValorAtributo" class="py-name" href="#" onclick="return doclink('link-13', 'getValorAtributo', 'link-13');">getValorAtributo</a></tt><tt class="py-op">(</tt><tt class="py-name">anotacion</tt><tt class="py-op">,</tt> <tt class="py-string">'clase'</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">upper</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L173"></a><tt class="py-lineno">173</tt>  <tt class="py-line">                                        <tt class="py-name">en_indice</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L174"></a><tt class="py-lineno">174</tt>  <tt class="py-line">                                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L175"></a><tt class="py-lineno">175</tt>  <tt class="py-line">                                        <tt class="py-keyword">if</tt> <tt class="py-name">anotacion_indice_anterior</tt> <tt class="py-op">==</tt> <tt class="py-name">anotacion</tt><tt class="py-op">:</tt> </tt>
<a name="L176"></a><tt class="py-lineno">176</tt>  <tt class="py-line">                                                <tt class="py-name">tag_evento</tt> <tt class="py-op">=</tt> <tt class="py-string">'I_INDICE_%s'</tt> <tt class="py-op">%</tt> <tt id="link-14" class="py-name"><a title="pln_inco.temantex.VinculacionFreelingEventos.getValorAtributo" class="py-name" href="#" onclick="return doclink('link-14', 'getValorAtributo', 'link-13');">getValorAtributo</a></tt><tt class="py-op">(</tt><tt class="py-name">anotacion</tt><tt class="py-op">,</tt> <tt class="py-string">'clase'</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">upper</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L177"></a><tt class="py-lineno">177</tt>  <tt class="py-line">                                        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L178"></a><tt class="py-lineno">178</tt>  <tt class="py-line">                                                <tt class="py-name">tag_evento</tt> <tt class="py-op">=</tt> <tt class="py-string">'B_INDICE_%s'</tt> <tt class="py-op">%</tt> <tt id="link-15" class="py-name"><a title="pln_inco.temantex.VinculacionFreelingEventos.getValorAtributo" class="py-name" href="#" onclick="return doclink('link-15', 'getValorAtributo', 'link-13');">getValorAtributo</a></tt><tt class="py-op">(</tt><tt class="py-name">anotacion</tt><tt class="py-op">,</tt> <tt class="py-string">'clase'</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">upper</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L179"></a><tt class="py-lineno">179</tt>  <tt class="py-line">                                                <tt class="py-name">anotacion_indice_anterior</tt> <tt class="py-op">=</tt> <tt class="py-name">anotacion</tt> </tt>
<a name="L180"></a><tt class="py-lineno">180</tt>  <tt class="py-line">                        <tt class="py-keyword">elif</tt> <tt class="py-name">anotacion</tt><tt class="py-op">.</tt><tt class="py-name">tipo</tt><tt class="py-op">.</tt><tt class="py-name">upper</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-string">'INTRUSO'</tt><tt class="py-op">:</tt> </tt>
<a name="L181"></a><tt class="py-lineno">181</tt>  <tt class="py-line">                                <tt class="py-name">tag_evento</tt> <tt class="py-op">=</tt> <tt class="py-string">'INTRUSO'</tt> </tt>
<a name="L182"></a><tt class="py-lineno">182</tt>  <tt class="py-line"> </tt>
<a name="L183"></a><tt class="py-lineno">183</tt>  <tt class="py-line">                        <tt class="py-name">a</tt><tt class="py-op">[</tt><tt class="py-string">'token'</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">token</tt> </tt>
<a name="L184"></a><tt class="py-lineno">184</tt>  <tt class="py-line">                        <tt class="py-name">res_oracion</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">a</tt><tt class="py-op">,</tt> <tt class="py-name">tag_evento</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L185"></a><tt class="py-lineno">185</tt>  <tt class="py-line">                 </tt>
<a name="L186"></a><tt class="py-lineno">186</tt>  <tt class="py-line">                <tt class="py-name">lista_res</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-name">res_oracion</tt><tt class="py-op">)</tt> </tt>
<a name="L187"></a><tt class="py-lineno">187</tt>  <tt class="py-line"> </tt>
<a name="L188"></a><tt class="py-lineno">188</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">lista_res</tt> </tt>
</div><a name="L189"></a><tt class="py-lineno">189</tt>  <tt class="py-line"> </tt>
<a name="L190"></a><tt class="py-lineno">190</tt>  <tt class="py-line"> </tt>
<a name="L191"></a><tt class="py-lineno">191</tt>  <tt class="py-line"><tt class="py-name">__all__</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-string">'obtenerOracionesTokensEtiquetados'</tt><tt class="py-op">]</tt> </tt>
<a name="L192"></a><tt class="py-lineno">192</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="pln_inco-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Tue Apr 26 01:04:51 2011
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
