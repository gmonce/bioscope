<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>pln_inco.bioscope.scripts</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="pln_inco-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="pln_inco-module.html">Package&nbsp;pln_inco</a> ::
        <a href="pln_inco.bioscope-module.html">Package&nbsp;bioscope</a> ::
        Module&nbsp;scripts
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="pln_inco.bioscope.scripts-module.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<!-- ==================== MODULE DESCRIPTION ==================== -->
<h1 class="epydoc">Module scripts</h1><p class="nomargin-top"><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html">source&nbsp;code</a></span></p>
<!-- ==================== FUNCTIONS ==================== -->
<a name="section-Functions"></a>
<table class="summary" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Functions</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-Functions"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="gen_text_files"></a><span class="summary-sig-name">gen_text_files</span>(<span class="summary-sig-arg">bcp</span>)</span><br />
      Genera documentos solamente con el texto de las oraciones</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#gen_text_files">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="gen_bioscope_files"></a><span class="summary-sig-name">gen_bioscope_files</span>(<span class="summary-sig-arg">bcp</span>)</span><br />
      Genera un archivo XML por cada documento del corpus bioscope</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#gen_bioscope_files">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#create_single_text_file" class="summary-sig-name">create_single_text_file</a>(<span class="summary-sig-arg">bcp</span>,
        <span class="summary-sig-arg">pattern</span>)</span><br />
      A partir de los archivos .txt del corpus que cumplen con pattern, 
      genera un archivo &#250;nico.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#create_single_text_file">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="genia_tag"></a><span class="summary-sig-name">genia_tag</span>(<span class="summary-sig-arg">bcp</span>)</span><br />
      Procesa el archivo con los textos del corpus, y lo analiza con Genia</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#genia_tag">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#gen_genia_files" class="summary-sig-name">gen_genia_files</a>(<span class="summary-sig-arg">bcp</span>)</span><br />
      Procesa el archivo resultado del an&#65155;&#173;lisis de Genia, y genera un 
      archivo para cada documento y oraci&#243;n del corpus.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#gen_genia_files">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#gen_parsed_files" class="summary-sig-name">gen_parsed_files</a>(<span class="summary-sig-arg">pattern</span>,
        <span class="summary-sig-arg">bcp</span>,
        <span class="summary-sig-arg">regenerate</span>=<span class="summary-sig-default">True</span>)</span><br />
      Ejecuta el parser de stanford para los archivos con extensi&#65155;&#1635;n .genia
      que cumplan con el patr&#65155;&#1635;n.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#gen_parsed_files">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#copy_genia_event_files" class="summary-sig-name">copy_genia_event_files</a>(<span class="summary-sig-arg">bcp</span>)</span><br />
      Copia los archivos de genia event correspondientes al corpus que 
      estoy procesando.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#copy_genia_event_files">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#draw_sentences" class="summary-sig-name">draw_sentences</a>(<span class="summary-sig-arg">bc</span>,
        <span class="summary-sig-arg">bcp</span>,
        <span class="summary-sig-arg">only_hedge_and_negation_sentences</span>=<span class="summary-sig-default">True</span>)</span><br />
      Dado un corpus, genera todas las im&#65155;&#173;genes de los &#65155;&#173;rboles de 
      an&#65155;&#173;lisis de sus oraciones</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#draw_sentences">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#print_attribute_table" class="summary-sig-name">print_attribute_table</a>(<span class="summary-sig-arg">bc</span>,
        <span class="summary-sig-arg">bcp</span>)</span><br />
      Genera los archivos con la tabulaci&#243;n de los atributos de cada 
      oraci&#243;n de los documentos del corpus</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#print_attribute_table">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#save_basic_attributes" class="summary-sig-name">save_basic_attributes</a>(<span class="summary-sig-arg">bc</span>,
        <span class="summary-sig-arg">dbname</span>)</span><br />
      Dado un corpus en memoria, persiste en la base de datos los atributos
      b&#225;sicos.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#save_basic_attributes">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#split_training_corpus" class="summary-sig-name">split_training_corpus</a>(<span class="summary-sig-arg">dbname</span>)</span><br />
      Separa la tabla bioscope en 80/20, manteniendo los atributos que 
      tenga actualmente Reescribe las tablas bioscope80 y bioscope20.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#split_training_corpus">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#generate_scope_analysis_table" class="summary-sig-name">generate_scope_analysis_table</a>(<span class="summary-sig-arg">dbname</span>,
        <span class="summary-sig-arg">source_table</span>,
        <span class="summary-sig-arg">target_table</span>)</span><br />
      Toma una tabla, recorre las oraciones y por cada instancia de HEDGE 
      CUE que encuentra, genera una instancia de entrenamiento con la 
      oraci&#243;n y la identificaci&#243;n del HC (adem&#225;s de los atributos que ya 
      ten&#237;a).</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#generate_scope_analysis_table">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#add_guessed_hedge_cue" class="summary-sig-name">add_guessed_hedge_cue</a>(<span class="summary-sig-arg">dbname</span>,
        <span class="summary-sig-arg">tablename</span>,
        <span class="summary-sig-arg">test_filename</span>)</span><br />
      Agrega la columna guessed_hedge_cue para incorporar el resultado de 
      una evaluaci&#243;n de hedge_cue que ser&#225; utilizado como atributo para 
      aprender el scope</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#add_guessed_hedge_cue">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="pln_inco.bioscope.scripts-module.html#gen_conll_file" class="summary-sig-name">gen_conll_file</a>(<span class="summary-sig-arg">dbname</span>,
        <span class="summary-sig-arg">tablename</span>,
        <span class="summary-sig-arg">filename</span>,
        <span class="summary-sig-arg">xs</span>,
        <span class="summary-sig-arg">y</span>,
        <span class="summary-sig-arg">has_instances</span>)</span><br />
      Genera el archivo para el entrenamiento/evaluaci&#243;n con CRF++, a 
      partir de la tabla de bioscope que se le indique Este archivo est&#225; en
      formato CoNLL, tiene una l&#237;nea por token, los atributos est&#225;n 
      separados por espacio, y el &#250;ltimo es el que vamos a usar para 
      clasificar.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#gen_conll_file">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
<!-- ==================== FUNCTION DETAILS ==================== -->
<a name="section-FunctionDetails"></a>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Function Details</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-FunctionDetails"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
</table>
<a name="create_single_text_file"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">create_single_text_file</span>(<span class="sig-arg">bcp</span>,
        <span class="sig-arg">pattern</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#create_single_text_file">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>A partir de los archivos .txt del corpus que cumplen con pattern, 
  genera un archivo &#250;nico. Es para facilitar el proceso de an&#65155;&#173;lisis con el
  tagger de GENIA.</p>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="gen_genia_files"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">gen_genia_files</span>(<span class="sig-arg">bcp</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#gen_genia_files">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Procesa el archivo resultado del an&#65155;&#173;lisis de Genia, y genera un 
  archivo para cada documento y oraci&#243;n del corpus.</p>
  <p>Lo generado por cada documento es un archivo en formato lema/POS, 
  listo para ser proceado directamente por el Stanford Parser, corrigiendo 
  algunos problemas en la salida del tagger de GENIA y cambiando algunos 
  formados para el PennTreeBank.</p>
  <p>Tambi&#233;n genera un archivo con los atributos de GENIA (adem&#65155;&#173;s del POS,
  NER y chunking), por cada oraci&#243;n, en un formato igual al que larga 
  GENIA</p>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="gen_parsed_files"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">gen_parsed_files</span>(<span class="sig-arg">pattern</span>,
        <span class="sig-arg">bcp</span>,
        <span class="sig-arg">regenerate</span>=<span class="sig-default">True</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#gen_parsed_files">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Ejecuta el parser de stanford para los archivos con extensi&#65155;&#1635;n .genia 
  que cumplan con el patr&#65155;&#1635;n. Guarda los resultados en archivos .parsed</p>
  <dl class="fields">
    <dt>Parameters:</dt>
    <dd><ul class="nomargin-top">
        <li><strong class="pname"><code>pattern</code></strong> - patr&#65155;&#1635;n que indica los documentos a parsear</li>
        <li><strong class="pname"><code>regenerate</code></strong> - indica si se deben regenerar archivos ya generados</li>
    </ul></dd>
  </dl>
</td></tr></table>
</div>
<a name="copy_genia_event_files"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">copy_genia_event_files</span>(<span class="sig-arg">bcp</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#copy_genia_event_files">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Copia los archivos de genia event correspondientes al corpus que estoy
  procesando. Recorre el corpus y va copiando los documentos 
  correspondientes, seg&#65155;&#65233;n su nombre</p>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="draw_sentences"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">draw_sentences</span>(<span class="sig-arg">bc</span>,
        <span class="sig-arg">bcp</span>,
        <span class="sig-arg">only_hedge_and_negation_sentences</span>=<span class="sig-default">True</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#draw_sentences">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Dado un corpus, genera todas las im&#65155;&#173;genes de los &#65155;&#173;rboles de 
  an&#65155;&#173;lisis de sus oraciones</p>
  <dl class="fields">
    <dt>Parameters:</dt>
    <dd><ul class="nomargin-top">
        <li><strong class="pname"><code>bc</code></strong> (<a href="pln_inco.bioscope.BioscopeCorpus-class.html" 
          class="link">bioscope.BioscopeCorpus</a>) - Corpus</li>
        <li><strong class="pname"><code>only_hedge_and_negation_sentences</code></strong> (Bool) - indica si generar las im&#65155;&#173;genes para todas las oraciones, o s&#243;lo 
          para aquellas que incluyen hedges o negaci&#243;n</li>
    </ul></dd>
  </dl>
</td></tr></table>
</div>
<a name="print_attribute_table"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">print_attribute_table</span>(<span class="sig-arg">bc</span>,
        <span class="sig-arg">bcp</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#print_attribute_table">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Genera los archivos con la tabulaci&#243;n de los atributos de cada oraci&#243;n
  de los documentos del corpus</p>
  <dl class="fields">
    <dt>Parameters:</dt>
    <dd><ul class="nomargin-top">
        <li><strong class="pname"><code>bc</code></strong> (<a href="pln_inco.bioscope.BioscopeCorpus-class.html" 
          class="link">bioscope.BioscopeCorpus</a>) - Corpus</li>
    </ul></dd>
  </dl>
</td></tr></table>
</div>
<a name="save_basic_attributes"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">save_basic_attributes</span>(<span class="sig-arg">bc</span>,
        <span class="sig-arg">dbname</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#save_basic_attributes">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Dado un corpus en memoria, persiste en la base de datos los atributos 
  b&#225;sicos. La idea es que esto se corra sobre la tabla vac&#237;a.</p>
  <dl class="fields">
    <dt>Parameters:</dt>
    <dd><ul class="nomargin-top">
        <li><strong class="pname"><code>bc</code></strong> (<a href="pln_inco.bioscope.BioscopeCorpus-class.html" 
          class="link">bioscope.BioscopeCorpus</a>) - Corpus</li>
        <li><strong class="pname"><code>dbname</code></strong> (<code>string</code>) - nombre del archivo que tiene la base de datos</li>
    </ul></dd>
  </dl>
</td></tr></table>
</div>
<a name="split_training_corpus"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">split_training_corpus</span>(<span class="sig-arg">dbname</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#split_training_corpus">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Separa la tabla bioscope en 80/20, manteniendo los atributos que tenga
  actualmente Reescribe las tablas bioscope80 y bioscope20.</p>
  <dl class="fields">
    <dt>Parameters:</dt>
    <dd><ul class="nomargin-top">
        <li><strong class="pname"><code>dbname</code></strong> (<code>string</code>) - nombre del archivo que tiene la base de datos</li>
    </ul></dd>
  </dl>
</td></tr></table>
</div>
<a name="generate_scope_analysis_table"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">generate_scope_analysis_table</span>(<span class="sig-arg">dbname</span>,
        <span class="sig-arg">source_table</span>,
        <span class="sig-arg">target_table</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#generate_scope_analysis_table">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Toma una tabla, recorre las oraciones y por cada instancia de HEDGE 
  CUE que encuentra, genera una instancia de entrenamiento con la oraci&#243;n y
  la identificaci&#243;n del HC (adem&#225;s de los atributos que ya ten&#237;a). 
  Convierte el scope al formato FOL</p>
  <dl class="fields">
    <dt>Parameters:</dt>
    <dd><ul class="nomargin-top">
        <li><strong class="pname"><code>dbname</code></strong> (<code>string</code>) - nombre del archivo que tiene la base de datos</li>
        <li><strong class="pname"><code>source_table</code></strong> (<code>string</code>) - nombre de la tabla origen (bioscope80)</li>
        <li><strong class="pname"><code>target_table</code></strong> (<code>string</code>) - nombre de la tabla destino (bioscope80_scope)</li>
    </ul></dd>
  </dl>
</td></tr></table>
</div>
<a name="add_guessed_hedge_cue"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">add_guessed_hedge_cue</span>(<span class="sig-arg">dbname</span>,
        <span class="sig-arg">tablename</span>,
        <span class="sig-arg">test_filename</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#add_guessed_hedge_cue">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Agrega la columna guessed_hedge_cue para incorporar el resultado de 
  una evaluaci&#243;n de hedge_cue que ser&#225; utilizado como atributo para 
  aprender el scope</p>
  <dl class="fields">
    <dt>Parameters:</dt>
    <dd><ul class="nomargin-top">
        <li><strong class="pname"><code>dbname</code></strong> (<code>string</code>) - nombre del archivo que tiene la base de datos</li>
        <li><strong class="pname"><code>tablename</code></strong> (<code>string</code>) - nombre de la tabla a la que se le agrega la columna</li>
        <li><strong class="pname"><code>test_filename</code></strong> (<code>string</code>) - archivo de testeo de donde obtengo el valor de la hedge cue 
          aprendido</li>
    </ul></dd>
  </dl>
</td></tr></table>
</div>
<a name="gen_conll_file"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">gen_conll_file</span>(<span class="sig-arg">dbname</span>,
        <span class="sig-arg">tablename</span>,
        <span class="sig-arg">filename</span>,
        <span class="sig-arg">xs</span>,
        <span class="sig-arg">y</span>,
        <span class="sig-arg">has_instances</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="pln_inco.bioscope.scripts-pysrc.html#gen_conll_file">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Genera el archivo para el entrenamiento/evaluaci&#243;n con CRF++, a partir
  de la tabla de bioscope que se le indique Este archivo est&#225; en formato 
  CoNLL, tiene una l&#237;nea por token, los atributos est&#225;n separados por 
  espacio, y el &#250;ltimo es el que vamos a usar para clasificar. Las 
  oraciones est&#225;&#173;n separadas por l&#237;neas en blanco</p>
  <dl class="fields">
    <dt>Parameters:</dt>
    <dd><ul class="nomargin-top">
        <li><strong class="pname"><code>dbname</code></strong> (<code>string</code>) - nombre del archivo que tiene la base de datos</li>
        <li><strong class="pname"><code>tablename</code></strong> (<code>string</code>) - nombre de la tabla a partir de la cual generar el archivo</li>
        <li><strong class="pname"><code>xs</code></strong> (List) - lista de atributos a generar. Tienen que ser iguales a las 
          columnas de la tabla de atributos de bioscope. No incluyen la 
          clase a aprender.</li>
        <li><strong class="pname"><code>y</code></strong> (List) - Clase a aprender (es uno de los atributos)</li>
        <li><strong class="pname"><code>has_instances</code></strong> (Bool) - indica si la tabla tiene varias instancias de la oraci&#243;n</li>
    </ul></dd>
  </dl>
</td></tr></table>
</div>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="pln_inco-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Tue Apr 26 01:04:50 2011
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
